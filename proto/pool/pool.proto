syntax = "proto3";
package osmosis.gamm.v1beta1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/doggystylez/interstellar-proto/query/pool";

service Query {
  rpc Pools(QueryPoolsRequest) returns (QueryPoolsResponse) {}

  // Deprecated: please use the alternative in x/poolmanager
  rpc NumPools(QueryNumPoolsRequest) returns (QueryNumPoolsResponse) {
    option deprecated = true;
  }

  // SpotPrice defines a gRPC query handler that returns the spot price given
  // a base denomination and a quote denomination.
  rpc SpotPrice(QuerySpotPriceRequest) returns (QuerySpotPriceResponse) {
    option deprecated = true;
  }

  // Deprecated: please use the alternative in x/poolmanager
  rpc EstimateSwapExactAmountIn(QuerySwapExactAmountInRequest) returns (QuerySwapExactAmountInResponse) {
    option deprecated = true;
  }
}

//=============================== Pools
message QueryPoolsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}
message QueryPoolsResponse {
  repeated google.protobuf.Any pools = 1 [(cosmos_proto.accepts_interface) = "PoolI"];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

//=============================== NumPools
message QueryNumPoolsRequest {
  option deprecated = true;
}
message QueryNumPoolsResponse {
  option deprecated = true;
  uint64 num_pools = 1 [(gogoproto.moretags) = "yaml:\"num_pools\""];
}

message QuerySpotPriceRequest {
  option deprecated = true;
  uint64 pool_id = 1 [(gogoproto.moretags) = "yaml:\"pool_id\""];
  string base_asset_denom = 2 [(gogoproto.moretags) = "yaml:\"base_asset_denom\""];
  string quote_asset_denom = 3 [(gogoproto.moretags) = "yaml:\"quote_asset_denom\""];
  reserved 4;
  reserved "withSwapFee";
}

message QuerySpotPriceResponse {
  option deprecated = true;
  // String of the Dec. Ex) 10.203uatom
  string spot_price = 1 [(gogoproto.moretags) = "yaml:\"spot_price\""];
}

message QuerySwapExactAmountInRequest {
  option deprecated = true;
  string sender = 1 [(gogoproto.moretags) = "yaml:\"sender\""];
  uint64 pool_id = 2 [(gogoproto.moretags) = "yaml:\"pool_id\""];
  string token_in = 3 [(gogoproto.moretags) = "yaml:\"token_in\""];
  repeated SwapAmountInRoute routes = 4 [
    (gogoproto.moretags) = "yaml:\"routes\"",
    (gogoproto.nullable) = false
  ];
}

message QuerySwapExactAmountInResponse {
  option deprecated = true;
  string token_out_amount = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"token_out_amount\"",
    (gogoproto.nullable) = false
  ];
}

message SwapAmountInRoute {
  uint64 pool_id = 1 [(gogoproto.moretags) = "yaml:\"pool_id\""];
  string token_out_denom = 2 [(gogoproto.moretags) = "yaml:\"token_out_denom\""];
}
