syntax = "proto3";
package cosmos.auth.v1beta1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/doggystylez/interstellar-proto/account";

service Query {
  // Accounts returns all the existing accounts.
  //
  // When called from another module, this query might consume a high amount of
  // gas if the pagination field is incorrectly set.
  //
  // Since: cosmos-sdk 0.43
  // Account returns account details based on address.
  rpc Account(QueryAccountRequest) returns (QueryAccountResponse) {}

  rpc Accounts(QueryAccountsRequest) returns (QueryAccountsResponse) {}
}

message QueryAccountRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // address defines the address to query for.
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// QueryAccountResponse is the response type for the Query/Account RPC method.
message QueryAccountResponse {
  // account defines the account of the corresponding address.
  google.protobuf.Any account = 1 [(cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
}

message QueryAccountsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAccountsResponse {
  // accounts are the existing accounts
  repeated google.protobuf.Any accounts = 1 [(cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message BaseAccount {
  option (amino.name) = "cosmos-sdk/BaseAccount";
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.equal) = false;

  option (cosmos_proto.implements_interface) = "cosmos.auth.v1beta1.AccountI";

  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  google.protobuf.Any pub_key = 2 [
    (gogoproto.jsontag) = "public_key,omitempty",
    (amino.field_name) = "public_key"
  ];

  uint64 account_number = 3;
  uint64 sequence = 4;
}
